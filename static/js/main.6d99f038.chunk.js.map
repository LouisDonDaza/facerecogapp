{"version":3,"sources":["components/img/brain.png","components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FaceRecognition","_ref","imageUrl","boxList","box","map","data","react_default","a","createElement","className","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","id","src","alt","width","height","Navigation","onRouteChange","isSignedin","display","justifyContent","onClick","Logo","tilt_default","options","max","background","brain","Rank","name","entries","concat","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","alert","htmlFor","React","Component","Register","onNameChange","onSubmitRegister","particleParam","particles","number","density","enable","value_area","line_linked","shadow","color","blur","initialState","input","route","joined","App","calcFaceLocation","clarifaiFace","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","assign","console","log","outputs","regions","region","region_info","bounding_box","catch","err","_this$state","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_Register_Register","components_Signin_Signin","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d99f038.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.b15c6f39.png\";","import React from 'react';\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n\tconst boxList = box.map(data=>{\r\n\t\treturn <div className=\"bounding-box\" style={{top:data.topRow, right: data.rightCol, bottom: data.bottomRow, left: data.leftCol}}></div>\r\n\t})\r\n\treturn (\r\n\t\t<div className=\"center ma\">\r\n\t\t\t<div className=\"absolute mt2\">\r\n\t\t\t\t<img id=\"inputImage\" src={imageUrl} alt=\"Dummy\" width=\"500px\" height=\"auto\"/>\r\n\t\t\t\t{boxList}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange ,isSignedin}) => {\r\n\t\tif(isSignedin){\r\n\t\treturn(\r\n\t\t<nav style={{display:\"flex\", justifyContent: \"flex-end\"}}>\r\n\t\t\t<p className=\"f3 link dim black underlined pa3 pointer\" \r\n\t\t\tonClick={() => onRouteChange('signout')}\r\n\t\t\t>Sign Out </p>\r\n\t\t</nav>\r\n\t\t);\r\n\t}\r\n\telse{\r\n\t\treturn (\r\n\t\t<nav style={{display:\"flex\", justifyContent: \"flex-end\"}}>\r\n\t\t\t<p className=\"f3 link dim black underlined pa3 pointer\" \r\n\t\t\tonClick={() => onRouteChange('signin')}\r\n\t\t\t>Sign In </p>\r\n\t\t\t<p className=\"f3 link dim black underlined pa3 pointer\" \r\n\t\t\tonClick={() => onRouteChange('register')}\r\n\t\t\t>Register </p>\r\n\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from '../img/brain.png';\r\nimport './Logo.css';\r\nconst Logo = ()=> {\r\n\treturn (\r\n\t\t<div className=\"ma4 mt0\">\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 60 }} style={{ height: 150, width: 150 }} >\r\n \t\t\t\t<div className=\"Tilt-inner\"><img style={{background:\"transparent\"}} src={brain} alt=\"Logo\"/> </div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"white f3\">\r\n\t\t\t\t{`${name}, your current entry count is`}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"white f2\">\r\n\t\t\t\t{entries}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Rank;","import React from 'react';\r\nimport \"./ImageLinkForm.css\";\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p className=\"f3\">\r\n\t\t\t{'This magic brain will detect faces in your pictures. Try it!'}\r\n\t\t\t</p>\r\n\t\t\t<div className=\"center\">\r\n\t\t\t\t<div className=\"center form pa4 br3 shadow-5\">\r\n\t\t\t\t\t<input className=\"f4 pa2 w-70 center\" type=\"text\" onChange={onInputChange} />\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"w-30 grow f4 link bn ph3 pv2 dib white bg-light-purple\"\r\n\t\t\t\t\t\tonClick={onButtonSubmit}>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: '',\r\n\t\t}\r\n\t}\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail: event.target.value})\r\n\t}\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword: event.target.value})\r\n\t}\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('http://localhost:3000/signin', {\r\n\t\t\t//fetch by default does a get request so we pass a post method\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword,\r\n\t\t\t}),\t\t\t\r\n\t\t}).then(response=>response.json())\r\n\t\t\t.then(user=>{\r\n\t\t\t\tif (user.id){\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\talert('Incorrect username and password');\r\n\t\t\t\t}\r\n\t\t\t\t})\r\n\t}\r\n\trender(){\r\n\t\tconst {onRouteChange} = this.props;\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<div className=\"pa4 black-80\">\r\n\t\t  \t\t\t<div className=\"measure\">\r\n\t\t    \t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      \t\t\t<legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t      \t      \t<div className=\"mt3\">\r\n\t\t\t      \t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t      \t        \t<input \r\n\t\t\t      \t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t      \t        \ttype=\"email\" \r\n\t\t\t      \t        \tname=\"email-address\"  \r\n\t\t\t      \t        \tid=\"email-address\"\r\n\t\t\t      \t        \tonChange={this.onEmailChange}/>\r\n\t\t\t      \t      \t</div>\r\n\t\t\t      \t      \t<div className=\"mv3\">\r\n\t\t\t      \t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t      \t        \t<input \r\n\t\t\t      \t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t      \t        \ttype=\"password\" \r\n\t\t\t      \t        \tname=\"password\"  \r\n\t\t\t      \t        \tid=\"password\"\r\n\t\t\t      \t        \tonChange={this.onPasswordChange}/>\r\n\t\t\t      \t      \t</div>\r\n\t\t\t      \t    </fieldset>\r\n\t\t\t      \t    <div className=\"\">\r\n\t\t\t      \t      <input onClick={\r\n\t\t\t      \t      \tthis.onSubmitSignIn\r\n\t\t\t      \t      }\r\n\t\t\t      \t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n\t\t\t      \t    </div>\r\n\t\t\t      \t    <div className=\"lh-copy mt3\">\r\n\t\t\t      \t      <p onClick={()=>\r\n\t\t\t      \t      \tonRouteChange('register')\r\n\t\t\t      \t      }className=\"f6 link dim black db pointer\">Register</p>\r\n\t\t\t    \t\t</div>\r\n\t\t  \t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tname: '',\r\n\t\t}\r\n\t}\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value})\r\n\t}\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value})\r\n\t}\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name: event.target.value})\r\n\t}\r\n\tonSubmitRegister = () => {\r\n\t\tfetch('http://localhost:3000/register', {\r\n\t\t\t//fetch by default does a get request so we pass a post method\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password,\r\n\t\t\t\tname: this.state.name,\r\n\t\t\t}),\t\t\t\r\n\t\t}).then(response=>response.json())\r\n\t\t\t.then(user=>{\r\n\t\t\t\tif (user.id){\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<div className=\"pa4 black-80\">\r\n\t\t  \t\t\t<div className=\"measure\">\r\n\t\t    \t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      \t\t\t<legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t      \t\t\t<div className=\"mt3\">\r\n\t\t\t      \t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t      \t        \t<input \r\n\t\t\t      \t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t      \t        \ttype=\"name\" \r\n\t\t\t      \t        \tname=\"name\"  \r\n\t\t\t      \t        \tid=\"name\"\r\n\t\t\t      \t        \tonChange={this.onNameChange}/>\r\n\t\t\t      \t      \t</div>\r\n\t\t\t      \t      \t<div className=\"mt3\">\r\n\t\t\t      \t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t      \t        \t<input \r\n\t\t\t      \t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t      \t        \ttype=\"email\" \r\n\t\t\t      \t        \tname=\"email-address\"  \r\n\t\t\t      \t        \tid=\"email-address\"\r\n\t\t\t      \t        \tonChange={this.onEmailChange}/>\r\n\t\t\t      \t      \t</div>\r\n\t\t\t      \t      \t<div className=\"mv3\">\r\n\t\t\t      \t        \t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t      \t        \t<input \r\n\t\t\t      \t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t      \t        \ttype=\"password\" \r\n\t\t\t      \t        \tname=\"password\"  \r\n\t\t\t      \t        \tid=\"password\"\r\n\t\t\t      \t        \tonChange={this.onPasswordChange}/>\r\n\t\t\t      \t      \t</div>\r\n\t\t\t      \t    </fieldset>\r\n\t\t\t      \t    <div className=\"\">\r\n\t\t\t      \t      <input onClick={\r\n\t\t\t      \t      \tthis.onSubmitRegister\r\n\t\t\t      \t      }\r\n\t\t\t      \t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n\t\t\t      \t    </div>\r\n\t\t  \t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Register;","import React, { Component } from 'react';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport Rank from './components/Rank/Rank.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Particles from 'react-particles-js';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\nimport './App.css';\n\n\nconst particleParam = {\n  particles: {\n                  number: {\n                    value: 30,\n                    density:{\n                      enable: true,\n                      value_area: 800\n                    }\n                  },\n                  line_linked: {\n                    shadow: {\n                      enable: true,\n                      color: \"#3CA9D1\",\n                      blur: 5\n                    }\n                  }\n                }\n}\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: [],\n  route: 'signin',\n  isSignedin: false,\n  user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: [],\n      route: 'signin',\n      isSignedin: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n  componentDidMount(){\n    fetch('http://localhost:3000/')\n    .then(response => response.json())\n    .then(console.log)\n  }\n  calcFaceLocation = (data)=>{\n    const clarifaiFace = data;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row *height),\n    }\n  }\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    }})\n\n  }\n  displayFaceBox = (box) => {\n    this.setState({box: box})\n  }\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('http://localhost:3000/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response =>{\n      if(response){\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id:this.state.user.id,\n          })\n        }).then(response=>response.json())\n        .then(count=> this.setState(Object.assign(this.state.user, {entries: count})))\n        console.log('updated');\n      }\n      let boxList = [];\n      boxList = response.outputs[0].data.regions.map(region => {\n        return region.region_info.bounding_box;\n      });\n      this.displayFaceBox(\n        boxList.map(box => {\n          return this.calcFaceLocation(box);\n        })\n        )\n    })\n    .catch(err => console.log(err));\n  }\n  onRouteChange = (route) => {\n    if(route === 'signout' || route === 'register'){\n      this.setState(initialState)\n    }\n    else {\n      this.setState({isSignedin:true})\n    }\n    this.setState({route: route});\n  }\n  render() {\n   const {isSignedin, imageUrl, route, box, user} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n              params={particleParam}\n            />\n        <Navigation isSignedin={isSignedin} onRouteChange={this.onRouteChange}/>\n        { route === 'home'\n        ? <div>\n          <Logo/>\n          <Rank name={user.name} entries={user.entries}/>\n          <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n          <FaceRecognition box={box} imageUrl={imageUrl}/>\n        </div>\n        : (\n          route === \"register\" ?\n          <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>:\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n        )\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}